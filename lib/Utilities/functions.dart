import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:onyourmarks/Utilities/staticNames.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:http/http.dart' as http;
import 'package:translator/translator.dart';
import 'dart:convert';

import '../Pages/Students/StudentHome.dart';
import '../Pages/Teachers/TeacherHome.dart';
import '../../Models/Student Models/UserModel.dart';
import 'staticNames.dart';

List<String> texts = [
  APP_NAME,
  "Username",
  "Password",
  "Login",
  'Home',
  "Invalid",
  "Hey ",
  "You gotta check this ЁЯШЙ",
  "NAME",
  "ROLL NO",
  "STANDARD",
  "GENDER",
  "FATHER NAME",
  "ADDRESS",
  "PHONE NO",
  "DASHBOARD",
  "INDIVIDUAL STUDENT ANALYSIS",
  'Attendance Percentage',
  "CURRENT EXAM STATUS",
  "NAME        : ",
  "ROLL NO : ",
  "PERFORMANCE",
  "Teachers",
  "STANDARD : ",
  "EXAMS",
  "FIND YOUR EXAMS HERE!!!",
  "Upcoming Exam for you is: ",
  "Results",
  "HERE'S YOUR MARKS",
  "No Results to Show",
  "From : ",
  "To      : ",
  "Co-Curricular Activity",
  "POST YOUR TALENT",
  "Pending",
  "Accepted",
  "Rejected",
  "Actitities Yet To Be SubmittedЁЯШЕ",
  "Actitities Yet To Be AcceptedЁЯШХ",
  "No Activities are RejectedЁЯШЙ",
  "Weekly TimeTable",
  "SEE THE SCHEDULE COMING!",
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday",
  "Maths",
  "Physics",
  "English",
  "Tamil",
  "Chemistry",
  "Biology",
  "Physical Education",
  "Please Rotate your Device",
  "Tasks",
  "Love to study",
  "Please Select A Date!",
  "Select A Date",
  "No Tasks Assigned",
  "Attendance",
  "STUDENT ATTENDANCE CALENDAR",
  "Attendance Updates At 10:00AM",
  "Present",
  "Absent",
  "Holiday",
  "Profile",
  "YOUR DETAILS",
  "ProfilePic"
];

var lang = {
  "English": [
    APP_NAME,
    "Username",
    "Password",
    "Login",
    'Home',
    "Invalid",
    "Hey ",
    "You gotta check this ЁЯШЙ",
    "NAME",
    "ROLL NO",
    "STANDARD",
    "GENDER",
    "FATHER NAME",
    "ADDRESS",
    "PHONE NO",
    "DASHBOARD",
    "INDIVIDUAL STUDENT ANALYSIS",
    'Attendance Percentage',
    "CURRENT EXAM STATUS",
    "NAME        : ",
    "ROLL NO : ",
    "PERFORMANCE",
    "Teachers",
    "STANDARD : ",
    "EXAMS",
    "FIND YOUR EXAMS HERE!!!",
    "Upcoming Exam for you is: ",
    "Results",
    "HERE'S YOUR MARKS",
    "No Results to Show",
    "From : ",
    "To      : ",
    "Co-Curricular Activity",
    "POST YOUR TALENT",
    "Pending",
    "Accepted",
    "Rejected",
    "Actitities Yet To Be SubmittedЁЯШЕ",
    "Actitities Yet To Be AcceptedЁЯШХ",
    "No Activities are RejectedЁЯШЙ",
    "Weekly TimeTable",
    "SEE THE SCHEDULE COMING!",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
    "Maths",
    "Physics",
    "English",
    "Tamil",
    "Chemistry",
    "Biology",
    "Physical Education",
    "Please Rotate your Device",
    "Tasks",
    "Love to study",
    "Please Select A Date!",
    "Select A Date",
    "No Tasks Assigned",
    "Attendance",
    "STUDENT ATTENDANCE CALENDAR",
    "Attendance Updates At 10:00AM",
    "Present",
    "Absent",
    "Holiday",
    "Profile",
    "YOUR DETAILS",
    "ProfilePic"
  ],
  "Tamil": [
    "роЙроЩрпНроХро│рпН роородро┐рокрпНрокрпЖрогрпНроХро│ро┐ро▓рпН",
    "рокропройро░рпН рокрпЖропро░рпН",
    "роХроЯро╡рпБроЪрпНроЪрпЖро╛ро▓рпН",
    "роЙро│рпНроирпБро┤рпИроп",
    'ро╡рпАроЯрпБ',
    "родро╡ро▒ро╛ройродрпБ",
    "роПропрпН ",
    "роирпАроЩрпНроХро│рпН роЗродрпИ роЪро░ро┐рокро╛ро░рпНроХрпНроХ ро╡рпЗрогрпНроЯрпБроорпН ЁЯШЙ",
    "NAME",
    "ро░рпЛро▓рпН роОрогрпН",
    "родро░роиро┐ро▓рпИ",
    "рокро╛ро▓ро┐ройроорпН",
    "родроирпНродрпИропро┐ройрпН рокрпЖропро░рпН",
    "роорпБроХро╡ро░ро┐",
    "родрпЖро╛ро▓рпИрокрпЗроЪро┐ роОрогрпН",
    "роЯро╛ро╖рпНрокрпЛро░рпНроЯрпБ",
    "родройро┐ рооро╛рогро╡ро░рпН рокроХрпБрокрпНрокро╛ропрпНро╡рпБ",
    'ро╡ро░рпБроХрпИ роЪродро╡рпАродроорпН',
    "родро▒рпНрокрпЛродрпИроп родрпЗро░рпНро╡рпБ роиро┐ро▓рпИ",
    "NAME : ",
    "ро░рпЛро▓рпН роОрогрпН:",
    "роЪрпЖропро▓рпНродро┐ро▒ройрпН",
    "роЖроЪро┐ро░ро┐ропро░рпНроХро│рпН",
    "родро░роиро┐ро▓рпИ : ",
    "родрпЗро░рпНро╡рпБроХро│рпН",
    "роЙроЩрпНроХро│рпН родрпЗро░рпНро╡рпБроХро│рпИ роЗроЩрпНроХрпЗ роХрогрпНроЯрпБрокро┐роЯро┐!!!",
    "роЙроЩрпНроХро│рпБроХрпНроХрпБ ро╡ро░ро╡ро┐ро░рпБроХрпНроХрпБроорпН родрпЗро░рпНро╡рпБ:",
    "роорпБроЯро┐ро╡рпБроХро│рпН",
    "роЗродрпЛ роЙроЩрпНроХро│рпН роородро┐рокрпНрокрпЖрогрпНроХро│рпН",
    "роХро╛роЯрпНроЯ роорпБроЯро┐ро╡рпБроХро│рпН роЗро▓рпНро▓рпИ",
    "роЗро░рпБроирпНродрпБ :",
    "роЗродро▒рпНроХрпБ:",
    "роЗрогрпИ рокро╛роЯродрпНродро┐роЯрпНроЯ роЪрпЖропро▓рпНрокро╛роЯрпБ",
    "роЙроЩрпНроХро│рпН родро┐ро▒роорпИропрпИ рокродро┐ро╡ро┐роЯрпБроЩрпНроХро│рпН",
    "роиро┐ро▓рпБро╡рпИропро┐ро▓рпН роЙро│рпНро│родрпБ",
    "роПро▒рпНро▒рпБроХрпНроХрпКро│рпНро│рокрпНрокроЯрпНроЯродрпБ",
    "роиро┐ро░ро╛роХро░ро┐роХрпНроХрокрпНрокроЯрпНроЯродрпБ",
    "роЗройрпНройрпБроорпН роЪрооро░рпНрокрпНрокро┐роХрпНроХ ро╡рпЗрогрпНроЯро┐роп роироЯро╡роЯро┐роХрпНроХрпИроХро│рпНЁЯШЕ",
    "роЗройрпНройрпБроорпН роПро▒рпНро▒рпБроХрпНроХрпКро│рпНро│рокрпНрокроЯро╛род роироЯро╡роЯро┐роХрпНроХрпИроХро│рпНЁЯШХ",
    "роОроирпНрод роироЯро╡роЯро┐роХрпНроХрпИроХро│рпБроорпН роиро┐ро░ро╛роХро░ро┐роХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ",
    "ро╡ро╛ро░ роХро╛ро▓ роЕроЯрпНроЯро╡рогрпИ",
    "ро╡ро░ро╡ро┐ро░рпБроХрпНроХрпБроорпН роЕроЯрпНроЯро╡рогрпИропрпИрокрпН рокро╛ро░рпНроХрпНроХро╡рпБроорпН!",
    "родро┐роЩрпНроХроЯрпНроХро┐ро┤роорпИ",
    "роЪрпЖро╡рпНро╡ро╛ропрпН",
    "рокрпБродройрпНроХро┐ро┤роорпИ",
    "ро╡ро┐ропро╛ро┤ройрпН",
    "ро╡рпЖро│рпНро│ро┐",
    "роЪройро┐роХрпНроХро┐ро┤роорпИ",
    "роХрогро┐родроорпН",
    "роЗропро▒рпНрокро┐ропро▓рпН",
    "роЖроЩрпНроХро┐ро▓роорпН",
    "родрооро┐ро┤рпН",
    "ро╡рпЗродро┐ропро┐ропро▓рпН",
    "роЙропро┐ро░ро┐ропро▓рпН",
    "роЙроЯро▒рпНроХро▓рпНро╡ро┐",
    "родропро╡рпБроЪрпЖропрпНродрпБ роЙроЩрпНроХро│рпН роЪро╛родройродрпНродрпИроЪрпН роЪрпБро┤ро▒рпНро▒рпБроЩрпНроХро│рпН",
    "рокрогро┐роХро│рпН",
    "рокроЯро┐роХрпНроХ ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпЗройрпН",
    "родропро╡рпБроЪрпЖропрпНродрпБ роТро░рпБ родрпЗродро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН!",
    "родрпЗродро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБ",
    "рокрогро┐роХро│рпН роОродрпБро╡рпБроорпН роТродрпБроХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ",
    "ро╡ро░рпБроХрпИ",
    "рооро╛рогро╡ро░рпН ро╡ро░рпБроХрпИ роХро╛ро▓рогрпНроЯро░рпН",
    "роХро╛ро▓рпИ 10:00 роорогро┐роХрпНроХрпБ ро╡ро░рпБроХрпИ рокро▒рпНро▒ро┐роп роЕро▒ро┐ро╡ро┐рокрпНрокрпБроХро│рпН",
    "родро▒рпНрокрпЛродрпБ",
    "роЗро▓рпНро▓ро╛родродрпБ",
    "ро╡ро┐роЯрпБроорпБро▒рпИ",
    "роЪрпБропро╡ро┐ро╡ро░роорпН",
    "роЙроЩрпНроХро│рпН ро╡ро┐ро╡ро░роЩрпНроХро│рпН",
    "роорпБроХрокрпНрокрпБ рокроЯроорпН"
  ],
  "Marathi": [
    "рд╡рд╛рдкрд░рдХрд░реНрддрд╛рдирд╛рд╡",
    "рдкрд╛рд╕рд╡рд░реНрдб",
    "рд▓реЙрдЧ рдЗрди",
    'рдореБрдЦреНрдпрдкреГрд╖реНрда',
    "рдЕрд╡реИрдз",
    "рдЕрд╣реЛ",
    "рддреБрдореНрд╣рд╛рд▓рд╛ рд╣реЗ рддрдкрд╛рд╕рд╛рд╡реЗ рд▓рд╛рдЧреЗрд▓ ЁЯШЙ",
    "рдирд╛рдо",
    "рд░реЛрд▓ рдирд╛рд╣реА",
    "рдорд╛рдирдХ",
    "GENDER",
    "рд╡рдбреАрд▓рд╛рдВрдЪреЗ рдирд╛рд╡рдВ",
    "рдкрддреНрддрд╛",
    "рджреВрд░рдзреНрд╡рдиреА рдХреНрд░рдорд╛рдВрдХ",
    "рдбреЕрд╢рдмреЛрд░реНрдб",
    "рд╡реИрдпрдХреНрддрд┐рдХ рд╡рд┐рджреНрдпрд╛рд░реНрдереА рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    'рдЙрдкрд╕реНрдерд┐рддреА рдЯрдХреНрдХреЗрд╡рд╛рд░реА',
    "рд╡рд░реНрддрдорд╛рди рдкрд░реАрдХреНрд╖реЗрдЪреА рд╕реНрдерд┐рддреА",
    "рдирд╛рдо : ",
    "рд░реЛрд▓ рдХреНрд░рдорд╛рдВрдХ :",
    "рдХрд╛рд░реНрдпрдкреНрд░рджрд░реНрд╢рди",
    "рд╢рд┐рдХреНрд╖рдХ",
    "рдорд╛рдирдХ : ",
    "рдкрд░реАрдХреНрд╖рд╛",
    "рддреБрдордЪреНрдпрд╛ рдкрд░реАрдХреНрд╖рд╛ рдпреЗрдереЗ рд╢реЛрдзрд╛!!!",
    "рддреБрдордЪреНрдпрд╛рд╕рд╛рдареА рдЖрдЧрд╛рдореА рдкрд░реАрдХреНрд╖рд╛ рдЖрд╣реЗ: ",
    "рдкрд░рд┐рдгрд╛рдо",
    "рд╣реЗ рдЖрд╣реЗрдд рддреБрдордЪреЗ рдЧреБрдг",
    "рджрд░реНрд╢рд╡рд┐рдгреНрдпрд╛рд╕рд╛рдареА рдХреЛрдгрддреЗрд╣реА рдкрд░рд┐рдгрд╛рдо рдирд╛рд╣реАрдд",
    "рдкреНрд░реЗрд╖рдХ: ",
    "рдкреНрд░рддрд┐:",
    "рд╕рд╣-рдЕрднреНрдпрд╛рд╕рдХреНрд░рдо рдХреНрд░рд┐рдпрд╛рдХрд▓рд╛рдк",
    "рддреБрдордЪреА рдкреНрд░рддрд┐рднрд╛ рдкреЛрд╕реНрдЯ рдХрд░рд╛",
    "рдкреНрд░рд▓рдВрдмрд┐рдд",
    "рд╕реНрд╡реАрдХрд╛рд░рд▓реЗ",
    "рдирд╛рдХрд╛рд░рд▓реЗ",
    "рдЙрдкрдХреНрд░рдо рдЕрджреНрдпрд╛рдк рд╕рд╛рджрд░ рдХрд░рд╛рдпрдЪреЗ рдЖрд╣реЗрддЁЯШЕ",
    "рдХрд╛рд░реНрдпрдХреНрд░рдо рдЕрджреНрдпрд╛рдк рд╕реНрд╡реАрдХрд╛рд░рд╛рдпрдЪреЗ рдЖрд╣реЗрддЁЯШХ",
    "рдХреЛрдгрддреЗрд╣реА рдЙрдкрдХреНрд░рдо рдирд╛рдХрд╛рд░рд▓реЗ рдЬрд╛рдд рдирд╛рд╣реАрддЁЯШЙ",
    "рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ рд╡реЗрд│рд╛рдкрддреНрд░рдХ",
    "рдпреЗрдд рдЕрд╕рд▓реЗрд▓реЗ рд╡реЗрд│рд╛рдкрддреНрд░рдХ рдкрд╣рд╛!",
    "рд╕реЛрдорд╡рд╛рд░",
    "рдордВрдЧрд│рд╡рд╛рд░",
    "рдмреБрдзрд╡рд╛рд░",
    "рдЧреБрд░реБрд╡рд╛рд░",
    "рд╢реБрдХреНрд░рд╡рд╛рд░",
    "рд╢рдирд┐рд╡рд╛рд░",
    "рдЧрдгрд┐рдд",
    "рднреМрддрд┐рдХрд╢рд╛рд╕реНрддреНрд░",
    "рдЗрдВрдЧреНрд░рдЬреА",
    "рддрдорд┐рд│",
    "рд░рд╕рд╛рдпрдирд╢рд╛рд╕реНрддреНрд░",
    "рдЬреАрд╡рд╢рд╛рд╕реНрддреНрд░",
    "рд╢рд╛рд░реАрд░рд┐рдХ рд╢рд┐рдХреНрд╖рдг",
    "рдХреГрдкрдпрд╛ рддреБрдордЪреЗ рдбрд┐рд╡реНрд╣рд╛рдЗрд╕ рдлрд┐рд░рд╡рд╛",
    "рдХрд╛рд░реНрдпреЗ",
    "рдЕрднреНрдпрд╛рд╕рд╛рдЪреА рдЖрд╡рдб",
    "рдХреГрдкрдпрд╛ рдПрдХ рддрд╛рд░реАрдЦ рдирд┐рд╡рдбрд╛!",
    "рддрд╛рд░реАрдЦ рдирд┐рд╡рдбрд╛",
    "рдХреЛрдгрддреАрд╣реА рдХрд╛рд░реНрдпреЗ рдирд┐рдпреБрдХреНрдд рдХреЗрд▓реЗрд▓реА рдирд╛рд╣реАрдд",
    "рдЙрдкрд╕реНрдерд┐рддреА",
    "рд╡рд┐рджреНрдпрд╛рд░реНрдереА рдЙрдкрд╕реНрдерд┐рддреА рджрд┐рдирджрд░реНрд╢рд┐рдХрд╛",
    "рд╕рдХрд╛рд│реА 10:00 рд╡рд╛рдЬрддрд╛ рдЙрдкрд╕реНрдерд┐рддреА рдЕрджреНрдпрддрдиреЗ",
    "рдЙрдкрд╕реНрдерд┐рдд",
    "рдЧреИрд░рд╣рдЬрд░",
    "рд╕реБрдЯреНрдЯреА",
    "рдкреНрд░реЛрдлрд╛рдЗрд▓",
    "рддреБрдордЪрд╛ рддрдкрд╢реАрд▓",
    "рдкреНрд░реЛрдлрд╛рдЗрд▓ рдЪрд┐рддреНрд░"
  ]
};

Future<String> getToken() async {
  SharedPreferences preferences = await SharedPreferences.getInstance();
  return preferences.get("token").toString();
}

Future<String> getRole() async {
  SharedPreferences preferences = await SharedPreferences.getInstance();
  var token = preferences.getString("token");
  if(token == null || token == "null"){
    token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmVhOTY1ZDY2YmY0ODZiNWQxNDZlYmIiLCJyb2xlIjoiVGVhY2hlciIsImlhdCI6MTY1ODcyMDE0Mn0.YeCwS_gu-rPREQgxU6tuRbZAp3bbUOKx5R53uuXbal4";
  }
  print("token:"+token.toString());

  var req = await http.get(
      Uri.parse(API_LINK+"api/admin/role"),
      headers: {
        "x-auth-token" : token
      }
  );
  return req.body.toString();
}

void goToRespectiveHomeScreen(BuildContext context) async {
  var role = await getRole();
  if (role == "Student")
    Navigator.pushReplacement(
        context, MaterialPageRoute(builder: (context) => StudentHome(0)));

  if (role == "Teacher")
    Navigator.pushReplacement(
        context, MaterialPageRoute(builder: (context) => TeacherHome(0)));
}

Future<UserModel> checkMe(String username, String password) async {
  var um = UserModel.empty("Error", true);
  var body = jsonEncode({"username": username, "password": password});
  var req = await http.post(Uri.parse("${API_LINK}api/user/check"),
      headers: {"content-type": "application/json"}, body: body);

  if(req.body.toString() == "Invalid UserName" || req.body.toString() == "Invalid Password"){
    toast(req.body.toString());
    return um;
  }

  var res = jsonDecode(req.body);
  um = UserModel(res["username"],res["user_id"],res["isAdmin"],res["isRegistered"]);

  SharedPreferences preferences = await SharedPreferences.getInstance();
  preferences.setString("token", req.headers['x-auth-token'].toString());

  return um;
}

Future<bool> changePassword(String username, String newPassword) async{
  var body = jsonEncode({
    "newPassword" : newPassword
  });

  var req = await http.put(
      Uri.parse("${API_LINK}api/user/password/${username}"),
      headers:{
        "content-type":"application/json"
      },
      body: body
  );

  var res = jsonDecode(req.body);

  return res["isRegistered"];
}

void toast(message) {
  Fluttertoast.showToast(
      msg: message,
      toastLength: Toast.LENGTH_SHORT,
      gravity: ToastGravity.SNACKBAR,
      timeInSecForIosWeb: 2,
      backgroundColor: Colors.red,
      textColor: Colors.white,
      fontSize: 16.0
  );
}

void popPagesNtimes(BuildContext context, int times) {
  var count = 0;
  Navigator.popUntil(context, (route) {
    return count++ == times;
  });
}

Future<void> changeLanguage(String language) async {
  // GoogleTranslator translator = GoogleTranslator();
  if(language == 'Marathi'){
    texts = lang["Marathi"] ?? [];
  }

  else if(language == 'English'){
    texts = lang["English"] ?? [];
  }

  else{
    texts = lang["Tamil"] ?? [];
  }
  // var index = 0;
  // for(var i in texts){
  //   var newText = "";
  //   (lang == "Marathi")
  //       ?await translator.translate(APP_NAME, from: 'en', to: 'mr').then((v){
  //         newText = v.text;
  //       })
  //       :await translator.translate(APP_NAME, from: 'mr', to: 'en').then((v){
  //     newText = v.text;
  //   });
  //   texts[index++] = newText;
  // }
  // print(texts.toString());
}